{"version":3,"sources":["dist/app.js"],"names":["angular","module","config","toasterConfig","limit","NotificationService","toaster","showError","title","message","notifyMessage","showSuccess","showInfo","showSpinner","clear","remove","notificationId","containerId","timeout","type","id","_id","pop","body","notifyCloseButton","toastId","showErrors","errorMessages","forEach","value","key","self","this","$inject","service"],"mappings":"CAAA,WACI,YAEAA,SAAQC,OAAO,gBAAiB,sBAEnC,WACG,YACAD,SAAQC,OAAO,kBAEjB,aAQA,eACA,YACA,YACM,UACN,oBACA,qBACA,qBACA,YAEOC,QAAQ,gBAAiB,SAAUC,GACtCA,EAAc,iBAAkB,EAChCA,EAAc,kBAAoB,kBAClCA,EAAc,kBAAmB,EACjCA,EAAcC,MAAQ,SAI5B,WACI,YAGAJ,SAAQC,OAAO,2BAA4B,mBAE3CD,QAAQC,OAAO,yBAA0B,iBAAkB,eAE3DD,QAAQC,OAAO,oBAAqB,0BAA2B,6BAEnE,WACI,YAEA,IAAII,GAAsB,WACtB,QAASA,GAAoBC,GAYzB,QAASC,GAAUC,EAAOC,GACtB,MAAOC,GAAcF,EAAOC,EAAS,EAAG,SAG5C,QAASE,GAAYH,EAAOC,GACxB,MAAOC,GAAcF,EAAOC,EAAS,IAAM,WAG/C,QAASG,GAASJ,EAAOC,GACrB,MAAOC,GAAcF,EAAOC,EAAS,IAAM,QAG/C,QAASI,GAAYL,EAAOC,GACxB,MAAOC,GAAcF,EAAOC,EAAS,EAAG,QAG5C,QAASK,KACLR,EAAQQ,QAGZ,QAASC,GAAOC,EAAgBC,GAC5BX,EAAQQ,MAAMG,EAAaD,GAG/B,QAASN,GAAcF,EAAOC,EAASS,EAASC,GAC5C,GAAIC,GAAKC,GAUT,OATAf,GAAQgB,KACJH,KAAMA,EACNX,MAAOA,EACPe,KAAMd,EACNS,QAASA,EACTM,mBAAmB,EACnBC,QAASL,IAGNA,EAGX,QAASM,GAAWC,EAAenB,GAC/BR,QAAQ4B,QAAQD,EAAe,SAAUE,EAAOC,GAC5CC,EAAKxB,UAAUC,GAASsB,EAAKD,KAnDrC,GAAIE,GAAOC,KAAMX,EAAM,CAEvBU,GAAKxB,UAAYA,EACjBwB,EAAKpB,YAAcA,EACnBoB,EAAKnB,SAAWA,EAChBmB,EAAKlB,YAAcA,EACnBkB,EAAKjB,MAAQA,EACbiB,EAAKhB,OAASA,EACdgB,EAAKL,WAAaA,EAiDtB,MADArB,GAAoB4B,SAAW,WACxB5B,IAGXL,SAAQC,OAAO,2BACNiC,QAAQ,gBAAiB7B","file":"dist/app.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('courses.main', ['courses.common']);\r\n})();\n(function () {\r\n    'use strict';\r\n    angular.module('courses.common', [\r\n\t\t/* Angular modules */\t\t\r\n\t\t'ngMessages',        \r\n\r\n\t\t/* Cross-app modules */\r\n\r\n\t\t/* App directives */\r\n\t\t\r\n\r\n\t\t/* 3rd Party modules */\r\n\t\t'ui.bootstrap',\r\n\t\t'ui.router',\r\n\t\t'ui.select',\r\n        'ui.grid',\r\n\t\t'ui.grid.selection',\r\n\t\t'ui.grid.pagination',\r\n\t\t'ui.grid.autoResize',\r\n\t\t'toaster'])\r\n        // if config grow bigger it will be moved to separate file\r\n        .config(['toasterConfig', function (toasterConfig) {\r\n\t\t    toasterConfig['close-button'] = true;\r\n\t\t    toasterConfig['position-class'] = 'toast-top-right';\r\n\t\t    toasterConfig['newest-on-top'] = false;\r\n\t\t    toasterConfig.limit = 50;\r\n\t\t}]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n\r\n    // common services like notifications, log, .. etc\r\n    angular.module('courses.common.services', ['courses.common']);\r\n    // services that get/send data from/to backend\r\n    angular.module('courses.data.services', ['courses.common', 'ngResource']);\r\n\r\n    angular.module('courses.services', ['courses.common.services', 'courses.data.services']);\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    var NotificationService = (function () {\r\n        function NotificationService(toaster) {\r\n            var self = this, _id = 1;\r\n\r\n            self.showError = showError;\r\n            self.showSuccess = showSuccess;\r\n            self.showInfo = showInfo;\r\n            self.showSpinner = showSpinner;\r\n            self.clear = clear;\r\n            self.remove = remove;\r\n            self.showErrors = showErrors;\r\n\r\n            /// Implementation ///\r\n            function showError(title, message) {\r\n                return notifyMessage(title, message, 0, 'error');\r\n            }\r\n\r\n            function showSuccess(title, message) {\r\n                return notifyMessage(title, message, 2000, 'success');\r\n            }\r\n\r\n            function showInfo(title, message) {\r\n                return notifyMessage(title, message, 5000, 'info');\r\n            }\r\n\r\n            function showSpinner(title, message) {\r\n                return notifyMessage(title, message, 0, 'wait');\r\n            }\r\n\r\n            function clear() {\r\n                toaster.clear();\r\n            }\r\n\r\n            function remove(notificationId, containerId) {\r\n                toaster.clear(containerId, notificationId);\r\n            }\r\n\r\n            function notifyMessage(title, message, timeout, type) {\r\n                var id = _id++;\r\n                toaster.pop({\r\n                    type: type,\r\n                    title: title,\r\n                    body: message,\r\n                    timeout: timeout,\r\n                    notifyCloseButton: true,\r\n                    toastId: id,\r\n                });\r\n\r\n                return id;\r\n            }\r\n\r\n            function showErrors(errorMessages, title) {\r\n                angular.forEach(errorMessages, function (value, key) {\r\n                    self.showError(title || key, value);\r\n                });\r\n            }\r\n        }\r\n\r\n        NotificationService.$inject = ['toaster'];\r\n        return NotificationService;\r\n    })();\r\n\r\n    angular.module('courses.common.services')\r\n            .service('notifications', NotificationService);\r\n})();"],"sourceRoot":"/source/"}