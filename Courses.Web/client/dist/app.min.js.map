{"version":3,"sources":["client/dist/app.js"],"names":["app","config","appPath","directivesPath","courses","$stateProvider","$inject","angular","module","toasterConfig","limit","Notifications","toaster","showError","title","message","notifyMessage","showSuccess","showInfo","showSpinner","clear","remove","notificationId","containerId","timeout","type","id","_id","pop","body","notifyCloseButton","toastId","showErrors","errorMessages","forEach","value","key","self","this","service","component","templateUrl","controller","vm","author","controllerAs","ApiHelper","$q","$log","notifications","_init","_notificationSettings","loadAction","spinningPrefix","successSuffix","errorPrefix","createAction","saveAction","deleteAction","load","params","actionName","_call","create","save","deleteRecord","call","spinningNotification","spinning","successNotification","success","errorNotification","error","action","deferred","defer","then","response","resolve","_getData","statusText","reject","ex","Exception","promise","args","_getNotifications","description","length","upperFirstLetterDescription","toUpperCase","substring","lowerFirstLetterDescription","toLowerCase","actionNotificationSetting","showSpinnerNotifications","showSuccessNoifications","showErrorNoifications","isDefined","data","Helper","$http","settings","_http","url","method","getUrl","headers","Content-Type","wsUrl","webserviceUrl","charAt","getDataFromResponse","get","post","undefined","put","resourceFactory","httpClient","apiHelper","opts","_save","options","getId","_delete","_query","list","_apiCall","isArray","Error","push","_get","promiseFn","copy","isString","isFunction","Id","Resource","extend","$save","$delete","query","factory"],"mappings":"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","file":"client/dist/app.min.js","sourcesContent":["var app = {\r\n    config:{\r\n        appPath: '/client/app/',\r\n        directivesPath: '/client/app/directives/',\r\n        courses: '/client/app/courses/',\r\n    }\r\n};\n(function (app) {\r\n    'use strict';\r\n\r\n    config.$inject = [\"$stateProvider\"];\r\n    angular.module('courses.main', ['courses.common', 'courese.directives', 'courses.services'])\r\n        .config(config);\r\n\r\n    function config($stateProvider) {\r\n        'ngInject';\r\n\r\n        //$stateProvider.state('Default', {\r\n        //    url: '',\r\n        //    views: {\r\n        //        \"mainView\": {                    \r\n        //            templateUrl: app.config.courses + '/courses.list.html',\r\n        //            controller: 'CoursesListController',\r\n        //            controllerAs: 'vm',\r\n        //        }\r\n        //    }\r\n        //});\r\n    }\r\n})(app);\n(function () {\r\n\t'use strict';\r\n\tangular.module('courses.common', [\r\n\t\t\t/* Angular modules */\r\n\t\t\t'ngMessages',\r\n\r\n\t\t\t/* Cross-app modules */\r\n\t\t\t'courses.settings',\r\n\t\t\t'courses.notifications',\r\n\t\t\t'courses.services',\r\n\r\n\t\t\t/* App directives */\r\n\t\t\t'courese.directives',\r\n\r\n\t\t\t/* 3rd Party modules */\r\n\t\t\t'ui.bootstrap',\r\n\t\t\t'ui.router',\r\n\t\t\t'ui.select',\r\n\t\t\t'ui.grid',\r\n\t\t\t'ui.grid.selection',\r\n\t\t\t'ui.grid.pagination',\r\n\t\t\t'ui.grid.autoResize',\r\n\t\t\t'toaster']\r\n\t\t)\r\n\t\t// if config grow bigger it will be moved to separate file\r\n\t\t.config(['toasterConfig', function (toasterConfig) {\r\n\t\t\ttoasterConfig['close-button'] = true;\r\n\t\t\ttoasterConfig['position-class'] = 'toast-top-right';\r\n\t\t\ttoasterConfig['newest-on-top'] = false;\r\n\t\t\ttoasterConfig.limit = 50;\r\n\t\t}]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('courses.services', ['courses.notifications', 'courses.settings']);\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    var Notifications = (function () {\r\n        function Notifications(toaster) {\r\n            var self = this, _id = 1;\r\n\r\n            self.showError = showError;\r\n            self.showSuccess = showSuccess;\r\n            self.showInfo = showInfo;\r\n            self.showSpinner = showSpinner;\r\n            self.clear = clear;\r\n            self.remove = remove;\r\n            self.showErrors = showErrors;\r\n\r\n            /// Implementation ///\r\n            function showError(title, message) {\r\n                return notifyMessage(title, message, 0, 'error');\r\n            }\r\n\r\n            function showSuccess(title, message) {\r\n                return notifyMessage(title, message, 2000, 'success');\r\n            }\r\n\r\n            function showInfo(title, message) {\r\n                return notifyMessage(title, message, 5000, 'info');\r\n            }\r\n\r\n            function showSpinner(title, message) {\r\n                return notifyMessage(title, message, 0, 'wait');\r\n            }\r\n\r\n            function clear() {\r\n                toaster.clear();\r\n            }\r\n\r\n            function remove(notificationId, containerId) {\r\n                toaster.clear(containerId, notificationId);\r\n            }\r\n\r\n            function notifyMessage(title, message, timeout, type) {\r\n                var id = _id++;\r\n                toaster.pop({\r\n                    type: type,\r\n                    title: title,\r\n                    body: message,\r\n                    timeout: timeout,\r\n                    notifyCloseButton: true,\r\n                    toastId: id,\r\n                });\r\n\r\n                return id;\r\n            }\r\n\r\n            function showErrors(errorMessages, title) {\r\n                angular.forEach(errorMessages, function (value, key) {\r\n                    self.showError(title || key, value);\r\n                });\r\n            }\r\n        }\r\n\r\n        Notifications.$inject = ['toaster'];\r\n        return Notifications;\r\n    })();\r\n\r\n    angular.module('courses.notifications', ['toaster'])\r\n            .service('notifications', Notifications);\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('courese.directives.common', []);\r\n    angular.module('courese.directives.forms', ['courese.directives.common']);\r\n    angular.module('courese.directives.layout', ['courese.directives.common']);\r\n\r\n    angular.module('courese.directives', ['courese.directives.forms', 'courese.directives.layout']);\r\n\r\n})();\n(function (app) {\r\n    'use strict';\r\n\r\n    angular.module('courese.directives.layout')\r\n        .component('courses.footer', {\r\n            templateUrl: app.config.directivesPath + 'views/footer.html',\r\n            controller: function () {\r\n                var vm = this;\r\n\r\n                vm.author = 'Mohammad Helmy (@moahelmy)';\r\n            },\r\n            controllerAs: 'vm'\r\n        });\r\n})(app);\n(function (app) {\r\n    'use strict';\r\n\r\n    angular.module('courese.directives.layout')\r\n        .component('courses.header', {\r\n            templateUrl: app.config.directivesPath + 'views/header.html',\r\n            controller: function () {\r\n                var vm = this;\r\n\r\n                vm.title = 'Courses - Sample App with AngularJS, EF and ASP.NET MVC';\r\n            },\r\n            controllerAs: 'vm'\r\n        });\r\n})(app);\n(function () {\r\n    'use strict';\r\n\r\n    ApiHelper.$inject = [\"$q\", \"$log\", \"notifications\"];\r\n    angular.module('courses.services')\r\n            .service('apiHelper', ApiHelper);\r\n\r\n    function ApiHelper($q, $log, notifications) {\r\n        'ngInject';\r\n\r\n        var self = this, loadAction = \"load\", createAction = \"create\", saveAction = \"save\", deleteAction = \"delete\", _notificationSettings;\r\n\r\n        self.call = call;\r\n        self.load = load;\r\n        self.create = create;\r\n        self.save = save;\r\n        self.delete = deleteRecord;\r\n\r\n        _init();\r\n\r\n        /// =================== ///\r\n        function _init() {\r\n            _notificationSettings = {};\r\n            _notificationSettings[loadAction] = {\r\n                title: 'Loading',\r\n                spinningPrefix: 'Loading ',\r\n                successSuffix: ' loaded!',\r\n                errorPrefix: 'An unexpected error while loading ',\r\n            };\r\n            _notificationSettings[createAction] = {\r\n                title: 'Saving',\r\n                spinningPrefix: 'Saving ',\r\n                successSuffix: ' has been created!',\r\n                errorPrefix: 'An unexpected error while creating ',\r\n            };\r\n            _notificationSettings[saveAction] = {\r\n                title: 'Saving',\r\n                spinningPrefix: 'Saving changes to ',\r\n                successSuffix: ' saved!',\r\n                errorPrefix: 'An unexpected error while saving ',\r\n            };\r\n            _notificationSettings[deleteAction] = {\r\n                title: 'Deleting',\r\n                spinningPrefix: 'Deleting ',\r\n                successSuffix: ' deleted!',\r\n                errorPrefix: 'An unexpected error while deleting ',\r\n            };\r\n        }\r\n\r\n        function load(params) {\r\n            params.actionName = loadAction;\r\n            return _call(params);\r\n        }\r\n\r\n        function create(params) {\r\n            params.actionName = createAction;\r\n            return _call(params);\r\n        }\r\n\r\n        function save(params) {\r\n            params.actionName = saveAction;\r\n            return _call(params);\r\n        }\r\n\r\n        function deleteRecord(params) {\r\n            params.actionName = deleteAction;\r\n            return _call(params);\r\n        }\r\n\r\n        function call(params) {\r\n            var spinningNotification = params.notifications && params.notifications.spinning,\r\n                successNotification = params.notifications && params.notifications.success,\r\n                errorNotification = params.notifications && params.notifications.error,\r\n                action = params.action;\r\n            // spinning/success/error notifications are shown only if spinning/success/error is defined.\r\n            var deferred = $q.defer();\r\n            var notificationId = null;\r\n            try {\r\n                notificationId = spinningNotification && notifications.showSpinner(spinningNotification.title, spinningNotification.message);\r\n                action().then(function (response) {\r\n                    if (notificationId) notifications.remove(notificationId);\r\n                    if (successNotification) notifications.showSuccess(successNotification.title, successNotification.message);\r\n                    deferred.resolve(_getData(response));\r\n                })\r\n                .catch(function (response) {\r\n                    if (notificationId) notifications.remove(notificationId);\r\n                    if (response.statusText) {\r\n                        notifications.showError('Error', response.statusText);\r\n                    } else {\r\n                        if (errorNotification) notifications.showError(errorNotification.title, errorNotification.message);\r\n                    }\r\n                    deferred.reject(response);\r\n                    //if (typeof error === \"string\") {\r\n                    //    errorNotification && notifications.showError(errorNotification.title, errorNotification.message);\r\n                    //    deferred.reject({ Messages: { Error: error } });\r\n                    //}\r\n                    //else {\r\n                    //    errorNotification && _showError({ ErrorMessages: error });\r\n                    //    deferred.reject({ ErrorMessages: error });\r\n                    //}\r\n                });\r\n            }\r\n            catch (ex) {\r\n                $log.error(ex);\r\n                if (notificationId) notifications.remove(notificationId);\r\n                if (errorNotification) notifications.showError(errorNotification.title, 'An unexpected error occured. Check log.');\r\n                deferred.reject({ Exception: ex });\r\n            }\r\n            return deferred.promise;\r\n        }\r\n\r\n        function _call(params) {\r\n            var args = {\r\n                notifications: _getNotifications({\r\n                    description: params.description,\r\n                    action: params.actionName,\r\n                }),\r\n                action: params.action,\r\n            };\r\n            return call(args);\r\n        }\r\n\r\n        function _getNotifications(params) {\r\n            if (!params.description || params.description.length === 0)\r\n                return;\r\n            var description = params.description,\r\n                upperFirstLetterDescription = description[0].toUpperCase() + description.substring(1),\r\n                lowerFirstLetterDescription = description[0].toLowerCase() + description.substring(1),\r\n                title, spinningPrefix, successSuffix, errorPrefix;\r\n            var actionNotificationSetting = _notificationSettings[params.action];\r\n            if (!actionNotificationSetting)\r\n                return;\r\n\r\n            title = actionNotificationSetting.title;\r\n            spinningPrefix = actionNotificationSetting.spinningPrefix;\r\n            successSuffix = actionNotificationSetting.successSuffix;\r\n            errorPrefix = actionNotificationSetting.errorPrefix;\r\n            return {\r\n                spinning: (params.showSpinnerNotifications || true) && { title: title, message: spinningPrefix + lowerFirstLetterDescription },\r\n                success: (params.showSuccessNoifications || true) && { title: upperFirstLetterDescription, message: upperFirstLetterDescription + successSuffix },\r\n                error: (params.showErrorNoifications || true) && { title: 'Error!', message: errorPrefix + lowerFirstLetterDescription + '.' },\r\n            };\r\n        }\r\n\r\n        function _getData(response) {\r\n            return response && angular.isDefined(response.data) ? response.data : response;\r\n        }\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    Helper.$inject = [\"$q\", \"$http\", \"settings\"];\r\n    angular.module('courses.services')\r\n        .service('httpClient', Helper);\r\n\r\n    function Helper($q, $http, settings) {\r\n        'ngInject';\r\n\r\n        var self = this;\r\n\r\n        self.getUrl = getUrl;\r\n        self.getDataFromResponse = getDataFromResponse;\r\n        self.get = function (url, params) {\r\n            return _http(url, 'GET', params);\r\n        };\r\n        self.post = function (url, data) {\r\n            return _http(url, 'POST', undefined, data);\r\n        };\r\n        self.put = function (url, params, data) {\r\n            return _http(url, 'PUT', params, data);\r\n        };\r\n        self.delete = function (url, params) {\r\n            return _http(url, 'DELETE', params);\r\n        };\r\n\r\n        /// =================== ///\r\n\r\n        // this is useful when we need to add constant headers to all requests\r\n        // also, it's good because I can tailor the success and fail behavior        \r\n        function _http(url, method, params, data) {\r\n            return $http({\r\n                method: method,\r\n                url: getUrl(url),\r\n                params: params,\r\n                headers: { 'Content-Type': 'application/json ; ' },\r\n                data: data\r\n            }).then(function (response) {\r\n                return response && response.data || response;\r\n            }).catch(function (response) {\r\n                $q.reject(response);\r\n            });\r\n        }\r\n\r\n        function getUrl(url) {\r\n            var wsUrl = settings.webserviceUrl;\r\n            wsUrl = wsUrl + (wsUrl.charAt(wsUrl.length - 1) === '/' ? '' : '/');\r\n            return wsUrl + (url.charAt(0) ===  '/' ? url.substring(1) : url);\r\n        }\r\n\r\n        function getDataFromResponse(response) {\r\n            return response && angular.isDefined(response.data) ? response.data : response;\r\n        }\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    resourceFactory.$inject = [\"httpClient\", \"apiHelper\"];\r\n    angular.module('courses.services')\r\n        .factory('resource', resourceFactory);\r\n\r\n    function resourceFactory(httpClient, apiHelper) {\r\n        'ngInject';\r\n\r\n        /*  opts\r\n        *  {\r\n        *      url: url, can override in save/delete options\r\n        *      name: name used in notifications, can override in save/delete options\r\n        *      id: name of id property, id can be provided explicitily in save/delete options\r\n        *      getId: function to get id from data, id can be provided explicitily in save/delete options\r\n        *  }\r\n        */\r\n        return function (opts) {\r\n            opts = opts || {};\r\n            if (!opts.url) {\r\n                throw new Error('Url is required.');\r\n            }\r\n            if (opts.id && !angular.isString(opts.id))\r\n                throw new Error(\"id should be the name of id property\");\r\n            if (opts.getId && !angular.isFunction(opts.getId))\r\n                throw new Error(\"getId should be a function to get id from data\");\r\n            var getId = function (data) {\r\n                if (opts.id)\r\n                    return data[opts.id];\r\n                if (opts.getId)\r\n                    return opts.getId(data);\r\n                return data.id || data.Id;\r\n            };\r\n\r\n            var Resource = function (data) {\r\n                angular.extend(this, data);\r\n\r\n                this.$save = function (options) {\r\n                    return _save(this, options);\r\n                };\r\n\r\n                this.$delete = function (options) {\r\n                    return _delete(this, options);\r\n                };\r\n            };\r\n\r\n            Resource.query = _query;\r\n            Resource.get = _get;\r\n            Resource.save = _save;\r\n            Resource.delete = _delete;\r\n\r\n            /// ========== ///\r\n\r\n            /*\r\n             * All options in these methods are the same:\r\n             * {\r\n             *      id: use this id in delete or save\r\n             *      url: use this url instead of default\r\n             *      description: used to construct notifications\r\n             *      notifications: used to override notifications\r\n             *      success: what to do on success\r\n             *      error: what to do on error\r\n             * }\r\n             */\r\n\r\n            function _save(data, options) {\r\n                options = options || {};\r\n                var url = options.url || opts.url;\r\n                var value = {};\r\n\r\n                var promise, method;\r\n                var id = getId(data);\r\n                if (id) {\r\n                    method = 'save';\r\n                    promise = httpClient.put(url, { id: id }, data);\r\n                } else {\r\n                    method = 'create';\r\n                    promise = httpClient.post(url, data);\r\n                }\r\n\r\n                _call(promise, options, method, value);\r\n\r\n                return value;\r\n            }\r\n\r\n            function _delete(data, options) {\r\n                options = options || {};\r\n                var url = options.url || opts.url;\r\n                var value = {};\r\n\r\n                _call(httpClient.delete(url, { id: getId(data) }), options, 'delete', value);\r\n\r\n                return value;\r\n            }\r\n\r\n            function _query(options) {\r\n                options = options || {};\r\n                var url = options.url || opts.url;\r\n                var list = [];\r\n                \r\n                _apiCall(httpClient.get(url), options, 'load').then(function (data) {\r\n                    if (!angular.isArray(data)) {\r\n                        throw new Error('Expected an array from the backend');\r\n                    }\r\n                    angular.forEach(data, function (value) {\r\n                        list.push(value);\r\n                    });\r\n                    options.success && options.success(list);\r\n                }).catch(function (error) {\r\n                    options.error && options.error(error);\r\n                });\r\n\r\n                return list;\r\n            }\r\n\r\n            function _get(id, options) {\r\n                options = options || {};\r\n                var url = options.url || opts.url;\r\n                var value = {};\r\n                \r\n                _call(httpClient.get(url, { id: id }), options, 'load', value);\r\n\r\n                return value;\r\n            }\r\n\r\n            function _apiCall(promise, options, method) {\r\n                var promiseFn = function(){\r\n                    return promise;\r\n                };\r\n                if (options.notifications)\r\n                    return apiHelper.call({ notifications: options.notifications, action: promiseFn });\r\n                return apiHelper[method]({\r\n                    description: options.description || opts.description\r\n                });\r\n            }\r\n\r\n            function _call(promise, options, method, value) {\r\n                _apiCall(promise, options, method).then(function (data) {\r\n                    if (angular.isArray(data)) {\r\n                        throw new Error('Expected single value from the backend');\r\n                    }\r\n                    angular.copy(data, value);\r\n                    options.success && options.success(value);\r\n                }).catch(function (error) {\r\n                    options.error && options.error(error);\r\n                });\r\n            }\r\n\r\n            return Resource;\r\n\r\n        };\r\n    }\r\n})();"],"sourceRoot":"/source/"}