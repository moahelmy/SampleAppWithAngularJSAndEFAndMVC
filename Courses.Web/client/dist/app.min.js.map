{"version":3,"sources":["client/dist/app.js"],"names":["app","config","appPath","directivesPath","courses","$stateProvider","state","url","views","mainView","template","$inject","angular","module","toasterConfig","limit","Notifications","toaster","showError","title","message","notifyMessage","showSuccess","showInfo","showSpinner","clear","remove","notificationId","containerId","timeout","type","pop","body","notifyCloseButton","toastId","showErrors","errorMessages","forEach","value","key","self","this","service","datePicker","DatePickerController","$scope","$timeout","vm","isOpened","open","closeText","isDefined","format","manualEntry","onDateChange","ngChange","isReadOnly","directive","require","restrict","scope","ngModel","ngRequired","field","clearText","currentText","altInputFormats","datepickerOptions","replace","templateUrl","controller","controllerAs","component","author","EditCoursesController","Course","$uibModalInstance","course","save","success","data","close","cancel","dismiss","Teacher","teacherSelected","selectedTeacher","teacherId","id","teacherName","name","teachers","query","teacher","bindings","CourseStudentsController","uiGridConstants","_init","_initStudentsGrid","addStudent","entity","editStudent","removeStudent","studentsGrid","paginationPageSizes","paginationPageSize","rowHeight","enableRowSelection","enableRowHeaderSelection","enableSelectAll","multiSelect","enableHorizontalScrollbar","scrollbars","NEVER","enableVerticalScrollbar","enableColumnMenus","enableSorting","columnDefs","displayName","cellTemplate","width","cellClass","appScopeProvider","students","add","edit","courseId","CoursesListController","$uibModal","$templateCache","_initCoursesGrid","addCourse","_openDialog","result","then","push","editCourse","_updateCourse","removeCourse","_removeCourse","index","indexOf","splice","viewName","ctrl","tUrl","animation","keyboard","backdrop","size","resolve","coursesGrid","onRegisterApi","gridApi","selection","on","rowSelectionChanged","row","ApiHelper","$q","$log","notifications","_notificationSettings","loadAction","spinningPrefix","successSuffix","errorPrefix","createAction","saveAction","deleteAction","load","params","actionName","_call","create","deleteRecord","call","spinningNotification","spinning","successNotification","errorNotification","error","action","deferred","defer","response","_getData","reject","ex","Exception","promise","args","_getNotifications","description","length","upperFirstLetterDescription","toUpperCase","substring","lowerFirstLetterDescription","toLowerCase","actionNotificationSetting","showSpinnerNotifications","showSuccessNoifications","showErrorNoifications","Courses","resource","courseResource","listName","transformFactory","transformObject","obj","prop","hasOwnProperty","newPropName","charAt","transform","isArray","arr","i","isObject","factory","Helper","$http","settings","transformData","_http","method","getUrl","headers","contentType","wsUrl","webserviceUrl","getDataFromResponse","get","post","undefined","put","resourceFactory","httpClient","apiHelper","opts","_save","options","getId","_delete","_query","list","_apiCall","Error","_get","isList","promiseFn","copy","isString","isFunction","Id","Resource","extend","$save","$delete","Student"],"mappings":"AAAA,GAAIA,MACAC,QACIC,QAAS,eACTC,eAAgB,0BAChBC,QAAS,0BAGjB,WACI,YAMA,SAASH,GAAOI,GACZ,UAEAA,GAAeC,MAAM,WACjBC,IAAK,GACLC,OACIC,UACIC,SAAU,oCAX1BT,EAAOU,SAAW,kBAClBC,QAAQC,OAAO,gBAAiB,mBAC3BZ,OAAOA,MAef,WACA,YACAW,SAAQC,OAAO,kBAEb,aAGA,mBACA,wBACA,mBAGA,qBAGA,eACA,YACA,YACA,UACA,oBACA,qBACA,qBACA,YAGAZ,QAAQ,gBAAiB,SAAUa,GACnCA,EAAc,iBAAkB,EAChCA,EAAc,kBAAoB,kBAClCA,EAAc,kBAAmB,EACjCA,EAAcC,MAAQ,SAIzB,WACI,YAEAH,SAAQC,OAAO,yBAA0B,eAE7C,WACI,YAEAD,SAAQC,OAAO,oBAAqB,wBAAyB,wBAEjE,WACI,YAEA,IAAIG,GAAgB,WAChB,QAASA,GAAcC,GAYnB,QAASC,GAAUC,EAAOC,GACtB,MAAOC,GAAcF,EAAOC,EAAS,EAAG,SAG5C,QAASE,GAAYH,EAAOC,GACxB,MAAOC,GAAcF,EAAOC,EAAS,IAAM,WAG/C,QAASG,GAASJ,EAAOC,GACrB,MAAOC,GAAcF,EAAOC,EAAS,IAAM,QAG/C,QAASI,GAAYL,EAAOC,GACxB,MAAOC,GAAcF,EAAOC,EAAS,EAAG,QAG5C,QAASK,KACLR,EAAQQ,QAGZ,QAASC,GAAOC,EAAgBC,GAC5BX,EAAQQ,MAAMG,EAAaD,GAG/B,QAASN,GAAcF,EAAOC,EAASS,EAASC,GAC5C,MAAOb,GAAQc,KACXD,KAAMA,EACNX,MAAOA,EACPa,KAAMZ,EACNS,QAASA,EACTI,mBAAmB,IACpBC,QAGP,QAASC,GAAWC,EAAejB,GAC/BP,QAAQyB,QAAQD,EAAe,SAAUE,EAAOC,GAC5CC,EAAKtB,UAAUC,GAASoB,EAAKD,KA/CrC,GAAIE,GAAOC,IAEXD,GAAKtB,UAAYA,EACjBsB,EAAKlB,YAAcA,EACnBkB,EAAKjB,SAAWA,EAChBiB,EAAKhB,YAAcA,EACnBgB,EAAKf,MAAQA,EACbe,EAAKd,OAASA,EACdc,EAAKL,WAAaA,EA6CtB,MADAnB,GAAcL,SAAW,WAClBK,IAGXJ,SAAQC,OAAO,yBACN6B,QAAQ,gBAAiB1B,MAEtC,SAAWhB,GACP,YAMA,SAAS2C,KAwBL,QAASC,GAAqBC,EAAQC,GAClC,GAAIC,GAAKN,IACTM,GAAGC,UAAW,EACdD,EAAGE,KAAO,WACNF,EAAGC,UAAW,GAElBD,EAAGG,UAAYtC,QAAQuC,UAAUN,EAAOK,WAAaL,EAAOK,UAAY,QACxEH,EAAGK,OAASxC,QAAQuC,UAAUN,EAAOO,QAAUP,EAAOO,OAAS,eAC/DL,EAAGM,YAAczC,QAAQuC,UAAUN,EAAOQ,aAAeR,EAAOQ,aAAc,EAC9EN,EAAGO,aAAe,WACVT,EAAOU,UACPT,EAASD,EAAOU,WAExBR,EAAGS,WAAa,WACZ,MAAOA,GAAWT,EAAGM,cAI7B,QAASG,GAAWH,GAChB,MAAuB,UAAhBA,GAA2BA,KAAgB,GAAyB,KAAhBA,EA1C/D,GAAII,IACAC,QAAS,UACTC,SAAU,IACVC,OACIC,QAAS,IACTC,WAAY,IACZP,SAAU,IACVQ,MAAO,IACPX,OAAQ,IACRF,UAAW,IACXc,UAAW,IACXC,YAAa,IACbC,gBAAiB,IACjBC,kBAAmB,IACnBd,YAAa,KAEjBe,SAAS,EACTC,YAAarE,EAAIC,OAAOE,eAAiB,yBACzCmE,WAAY1B,EACZ2B,aAAc,KAyBlB,OAtBA3B,GAAqBjC,SAAW,SAAU,YAsBnC8C,EAjDX7C,QACKC,OAAO,4BAA6B,YAAa,iBACjD4C,UAAU,iBAAkBd,IAiDlC3C,KACH,WACI,YAEAY,SAAQC,OAAO,gCACfD,QAAQC,OAAO,4BAA6B,8BAC5CD,QAAQC,OAAO,6BAA8B,8BAE7CD,QAAQC,OAAO,sBAAuB,2BAA4B,iCAGtE,SAAWb,GACP,YAEAY,SAAQC,OAAO,6BACV2D,UAAU,kBACPH,YAAarE,EAAIC,OAAOE,eAAiB,oBACzCmE,WAAY,WACR,GAAIvB,GAAKN,IAETM,GAAG0B,OAAS,8BAEhBF,aAAc,QAEvBvE,KACH,SAAWA,GACP,YAEAY,SAAQC,OAAO,6BACV2D,UAAU,kBACPH,YAAarE,EAAIC,OAAOE,eAAiB,oBACzCmE,WAAY,WACR,GAAIvB,GAAKN,IAETM,GAAG5B,MAAQ,2DAEfoD,aAAc,QAEvBvE,KACH,WACI,YAOA,SAAS0E,GAAsBC,EAAQC,EAAmBC,GACtD,UAUA,SAASC,KACLH,EAAOG,KAAK/B,EAAG8B,QACXE,QAAS,SAAUC,GACfJ,EAAkBK,MAAMD,MAKpC,QAASE,KACLN,EAAkBO,QAAQ,UAjB9B,GAAIpC,GAAKN,IAETM,GAAG8B,OAASA,MACZ9B,EAAG+B,KAAOA,EACV/B,EAAGmC,OAASA,EAZhBR,EAAsB/D,SAAW,SAAU,oBAAqB,UAChEC,QAAQC,OAAO,gBACVyD,WAAW,6BAA8BI,MA2BlD,SAAW1E,GACP,YAaA,SAAS0E,GAAsBU,GAC3B,UAYA,SAASC,GAAgBC,GACrBvC,EAAG8B,OAAOU,UAAYD,EAAgBE,GACtCzC,EAAG8B,OAAOY,YAAcH,EAAgBI,KAZ5C,GAAI3C,GAAKN,IAETM,GAAG4C,SAAWP,EAAQQ,QACtB7C,EAAG8C,QAAU9C,EAAG8B,SAAYW,GAAIzC,EAAG8B,OAAOU,UAAWG,KAAM3C,EAAG8B,OAAOY,iBACrE1C,EAAGsC,gBAAkBA,EAErBtC,EAAG8B,OAAS9B,EAAG8B,WApBnBH,EAAsB/D,SAAW,WACjCC,QAAQC,OAAO,gBACV2D,UAAU,cACPH,YAAarE,EAAIC,OAAOG,QAAU,mBAClCkE,WAAYI,EACZoB,UACIjB,OAAQ,QAuBrB7E,KACH,SAAWA,GACP,YAYA,SAAS+F,GAAyBC,GAC9B,UAcA,SAASC,KACLC,IAGJ,QAASC,GAAWC,IAIpB,QAASC,GAAYD,IAIrB,QAASE,GAAcF,IAIvB,QAASF,KACLnD,EAAGwD,cACCC,qBAAsB,GACtBC,mBAAoB,EACpBC,UAAW,GACXC,oBAAoB,EACpBC,0BAA0B,EAC1BC,iBAAiB,EACjBC,aAAa,EACbC,0BAA2Bf,EAAgBgB,WAAWC,MACtDC,wBAAyBlB,EAAgBgB,WAAWC,MACpDE,mBAAmB,EACnBC,eAAe,EACfC,aACMtD,MAAO,OAAQuD,YAAa,GAAIC,aAAc,wBAAyBC,MAAO,GAAIJ,eAAe,IACjGrD,MAAO,SAAUuD,YAAa,GAAIC,aAAc,0BAA2BC,MAAO,GAAIJ,eAAe,IACrG1B,KAAM,OAAQ3B,MAAO,OAAQuD,YAAa,OAAQE,MAAO,QACzD9B,KAAM,MAAO3B,MAAO,MAAOuD,YAAa,MAAOG,UAAW,cAAeD,MAAO,SAChF9B,KAAM,MAAO3B,MAAO,MAAOuD,YAAa,MAAOG,UAAW,cAAeD,MAAO,QAEtFxC,KAAM,kBAEVjC,EAAGwD,aAAamB,iBAAmB3E,EAlDvC,GAAIA,GAAKN,IAETM,GAAG4E,YACH5E,EAAGwD,gBAEHxD,EAAG6E,IAAMzB,EACTpD,EAAG8E,KAAOxB,EACVtD,EAAGrB,OAAS4E,EAEZL,IAtBJF,EAAyBpF,SAAW,mBACpCC,QAAQC,OAAO,gBACV2D,UAAU,kBACPH,YAAarE,EAAIC,OAAOG,QAAU,uBAClCkE,WAAYyB,EACZD,UACIgC,SAAU,QA6DvB9H,KACH,SAAWA,GACP,YAUA,SAAS+H,GAAsB/B,EAAiBrB,EAAQqD,EAAWC,GAC/D,UAeA,SAAShC,KACLiC,IAGJ,QAASC,KACLC,IACKC,OAAOC,KAAK,SAAUzD,GACnBA,GAAU9B,EAAG3C,QAAQmI,KAAK1D,KAItC,QAAS2D,GAAWpC,GAChBgC,EAAYhC,GACPiC,OAAOC,KAAK,SAAUzD,GACnBA,GAAU4D,EAAcrC,EAAQvB,KAI5C,QAAS6D,GAAatC,GAClBgC,EAAYhC,EAAQ,4BAA6B,gCAC5CiC,OAAOC,KAAK,SAAUzD,GACvBA,GAAU8D,EAAcvC,KAIhC,QAASqC,GAAcrC,EAAQvB,GAC3B,GAAI+D,GAAQ7F,EAAG3C,QAAQyI,QAAQzC,EAC/BwC,GAAQ,KAAO7F,EAAG3C,QAAQwI,GAAS/D,GAGvC,QAAS8D,GAAcvC,GACnB,GAAIwC,GAAQ7F,EAAG3C,QAAQyI,QAAQzC,EAC/BwC,GAAQ,IAAM7F,EAAG3C,QAAQ0I,OAAOF,EAAO,GAG3C,QAASR,GAAYvD,EAAQkE,EAAUC,GACnC,GAAIC,GAAOjJ,EAAIC,OAAOG,SAAW2I,GAAY,0BAE7C,OADAd,GAAevG,OAAOuH,GACfjB,EAAU/E,MACbiG,WAAW,EACX7E,YAAa4E,EACb3E,WAAY0E,GAAQ,6BACpBzE,aAAc,KACd4E,UAAU,EACVC,SAAU,SACVC,KAAM,KACNC,SACIzE,OAAQ,WACJ,MAAOA,IAAU,SAMjC,QAASqD,KACLnF,EAAGwG,aACC/C,qBAAsB,GACtBC,mBAAoB,EACpBC,UAAW,GACXC,oBAAoB,EACpBC,0BAA0B,EAC1BC,iBAAiB,EACjBC,aAAa,EACbC,0BAA2Bf,EAAgBgB,WAAWC,MACtDC,wBAAyBlB,EAAgBgB,WAAWC,MACpDE,mBAAmB,EACnBC,eAAe,EACfC,aACMtD,MAAO,OAAQuD,YAAa,GAAIC,aAAc,uBAAwBC,MAAO,GAAIJ,eAAe,IAChGrD,MAAO,SAAUuD,YAAa,GAAIC,aAAc,yBAA0BC,MAAO,GAAIJ,eAAe,IACpG1B,KAAM,OAAQ3B,MAAO,OAAQuD,YAAa,OAAQE,MAAO,QACzD9B,KAAM,WAAY3B,MAAO,WAAYuD,YAAa,WAAYE,MAAO,QACrE9B,KAAM,UAAW3B,MAAO,cAAeuD,YAAa,UAAWE,MAAO,QAE5ExC,KAAM,iBAEVjC,EAAGwG,YAAY7B,iBAAmB3E,EAClCA,EAAGwG,YAAYC,cAAgB,SAAUC,GACrCA,EAAQC,UAAUC,GAAGC,oBAAoB,KAAM,SAAUC,GACrD9G,EAAG8B,OAASgF,EAAIzD,OAChBrD,EAAG4E,SAAW5E,EAAG8B,OAAO8C,YA7FpC,GAAI5E,GAAKN,IAETM,GAAG3C,QAAUuE,EAAOiB,QACpB7C,EAAG8B,UACH9B,EAAGwG,eAEHxG,EAAG6E,IAAMO,EACTpF,EAAG8E,KAAOW,EACVzF,EAAGrB,OAASgH,EAEZzC,IArBJ8B,EAAsBpH,SAAW,kBAAmB,SAAU,YAAa,kBAC3EC,QAAQC,OAAO,gBACV2D,UAAU,eACPH,YAAarE,EAAIC,OAAOG,QAAU,eAClCkE,WAAYyD,KAyGrB/H,KACH,WACI,YAMA,SAAS8J,GAAUC,EAAIC,EAAMC,GACzB,UAaA,SAAShE,KACLiE,KACAA,EAAsBC,IAClBhJ,MAAO,UACPiJ,eAAgB,WAChBC,cAAe,WACfC,YAAa,sCAEjBJ,EAAsBK,IAClBpJ,MAAO,SACPiJ,eAAgB,UAChBC,cAAe,qBACfC,YAAa,uCAEjBJ,EAAsBM,IAClBrJ,MAAO,SACPiJ,eAAgB,qBAChBC,cAAe,UACfC,YAAa,qCAEjBJ,EAAsBO,IAClBtJ,MAAO,WACPiJ,eAAgB,YAChBC,cAAe,YACfC,YAAa,uCAIrB,QAASI,GAAKC,GAEV,MADAA,GAAOC,WAAaT,EACbU,EAAMF,GAGjB,QAASG,GAAOH,GAEZ,MADAA,GAAOC,WAAaL,EACbM,EAAMF,GAGjB,QAAS7F,GAAK6F,GAEV,MADAA,GAAOC,WAAaJ,EACbK,EAAMF,GAGjB,QAASI,GAAaJ,GAElB,MADAA,GAAOC,WAAaH,EACbI,EAAMF,GAGjB,QAASK,GAAKL,GACV,GAAIM,GAAuBN,EAAOV,eAAiBU,EAAOV,cAAciB,SACpEC,EAAsBR,EAAOV,eAAiBU,EAAOV,cAAclF,QACnEqG,EAAoBT,EAAOV,eAAiBU,EAAOV,cAAcoB,MACjEC,EAASX,EAAOW,OAEhBC,EAAWxB,EAAGyB,QACd7J,EAAiB,IACrB,KACIA,EAAiBsJ,GAAwBhB,EAAczI,YAAYyJ,EAAqB9J,MAAO8J,EAAqB7J,SACpHkK,IAAShD,KAAK,SAAUmD,GAChB9J,GAAgBsI,EAAcvI,OAAOC,GACrCwJ,GAAqBlB,EAAc3I,YAAY6J,EAAoBhK,MAAOgK,EAAoB/J,SAClGmK,EAASjC,QAAQoC,EAASD,MAH9BH,SAKO,SAAUG,GACT9J,GAAgBsI,EAAcvI,OAAOC,GACrC8J,EAASzG,MAAQyG,EAASzG,KAAK5D,QAC/B6I,EAAc/I,UAAU,QAASuK,EAASzG,KAAK5D,SAE3CgK,GAAmBnB,EAAc/I,UAAUkK,EAAkBjK,MAAOiK,EAAkBhK,SAE9FmK,EAASI,OAAOF,KAGxB,MAAOG,GACH5B,EAAKqB,MAAMO,GACPjK,GAAgBsI,EAAcvI,OAAOC,GACrCyJ,GAAmBnB,EAAc/I,UAAUkK,EAAkBjK,MAAO,2CACxEoK,EAASI,QAASE,UAAWD,IAEjC,MAAOL,GAASO,QAGpB,QAASjB,GAAMF,GACX,GAAIoB,IACA9B,cAAe+B,GACXC,YAAatB,EAAOsB,YACpBX,OAAQX,EAAOC,aAEnBU,OAAQX,EAAOW,OAEnB,OAAON,GAAKe,GAGhB,QAASC,GAAkBrB,GACvB,GAAKA,EAAOsB,aAA6C,IAA9BtB,EAAOsB,YAAYC,OAA9C,CAEA,GAGI/K,GAAOiJ,EAAgBC,EAAeC,EAHtC2B,EAActB,EAAOsB,YACrBE,EAA8BF,EAAY,GAAGG,cAAgBH,EAAYI,UAAU,GACnFC,EAA8BL,EAAY,GAAGM,cAAgBN,EAAYI,UAAU,GAEnFG,EAA4BtC,EAAsBS,EAAOW,OAC7D,IAAKkB,EAOL,MAJArL,GAAQqL,EAA0BrL,MAClCiJ,EAAiBoC,EAA0BpC,eAC3CC,EAAgBmC,EAA0BnC,cAC1CC,EAAckC,EAA0BlC,aAEpCY,UAAWP,EAAO8B,2BAA4B,KAAWtL,MAAOA,EAAOC,QAASgJ,EAAiBkC,GACjGvH,SAAU4F,EAAO+B,0BAA2B,KAAWvL,MAAOgL,EAA6B/K,QAAS+K,EAA8B9B,GAClIgB,OAAQV,EAAOgC,wBAAyB,KAAWxL,MAAO,SAAUC,QAASkJ,EAAcgC,EAA8B,OAIjI,QAASZ,GAASD,GACd,MAAOA,IAAY7K,QAAQuC,UAAUsI,EAASzG,MAAQyG,EAASzG,KAAOyG,EA/H1E,GAA6GvB,GAAzG1H,EAAOC,KAAM0H,EAAa,OAAQI,EAAe,SAAUC,EAAa,OAAQC,EAAe,QAEnGjI,GAAKwI,KAAOA,EACZxI,EAAKkI,KAAOA,EACZlI,EAAKsI,OAASA,EACdtI,EAAKsC,KAAOA,EACZtC,EAAAA,UAAcuI,EAEd9E,IAfJ6D,EAAUnJ,SAAW,KAAM,OAAQ,iBACnCC,QAAQC,OAAO,oBACN6B,QAAQ,YAAaoH,MAwIlC,WACI,YAMA,SAAS8C,GAAQC,GACb,UAEA,IAAIC,GAAiBD,GACjBtM,IAAK,cACLwM,SAAU,SACVrH,KAAM,UASV,OANAoH,GAAenF,SAAW,SAAUG,GAChC,MAAOgF,GAAelH,OAClBrF,IAAK,eAAiBuH,EAAW,eAIlCgF,EAnBXF,EAAQjM,SAAW,YACnBC,QAAQC,OAAO,oBACN6B,QAAQ,SAAUkK,MAoB/B,WACI,YAKA,SAASI,KACL,QAASC,GAAgBjI,GACrB,GAAIkI,KAEJ,KAAK,GAAIC,KAAQnI,GACb,GAAIA,EAAKoI,eAAeD,GAAO,CAC3B,GAAIE,GAAcF,EAAKG,OAAO,GAAGf,cAAgBY,EAAKd,UAAU,EAChEgB,GAAcA,EAAYjJ,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IACxD8I,EAAIG,GAAerI,EAAKmI,GAIhC,MAAOD,GAGX,QAASK,GAAUvI,GACf,GAAIpE,QAAQ4M,QAAQxI,GAAO,CAEvB,IAAK,GADDyI,MACKC,EAAI,EAAGA,EAAI1I,EAAKkH,OAAQwB,IAC7BD,EAAIlF,KAAKgF,EAAUvI,EAAK0I,IAE5B,OAAOD,GAGX,MAAI7M,SAAQ+M,SAAS3I,GACViI,EAAgBjI,GAD3B,OAKJ,MAAO,UAAUA,GACb,MAAOpE,SAAQuC,UAAU6B,GAAQuI,EAAUvI,GAAQA,GAjC3DpE,QAAQC,OAAO,oBACV+M,QAAQ,gBAAiBZ,MAqClC,WACI,YAMA,SAASa,GAAO9D,EAAI+D,EAAOC,EAAUC,GACjC,UAuBA,SAASC,GAAM1N,EAAK2N,EAAQvD,EAAQ3F,GAChC,GAAIuG,GAAWxB,EAAGyB,OAclB,OAbAsC,IACII,OAAQA,EACR3N,IAAK4N,EAAO5N,GACZyE,KAAMA,EACNoJ,SAAWC,YAAa,mCACxB1D,OAAQA,IACTrC,KAAK,SAAUmD,GACd,GAAIzG,GAAOyG,GAAYA,EAASzG,IAChC,OAAOuG,GAASjC,QAAQtE,EAAOgJ,EAAchJ,GAAQyG,KARzDqC,SASS,SAAUrC,GACfF,EAASI,OAAOF,KAGbF,EAASO,QAGpB,QAASqC,GAAO5N,GACZ,GAAI+N,GAAQP,EAASQ,aAErB,OADAD,IAAoD,MAAnCA,EAAMhB,OAAOgB,EAAMpC,OAAS,GAAa,GAAK,IACxDoC,GAA4B,MAAnB/N,EAAI+M,OAAO,GAAc/M,EAAI8L,UAAU,GAAK9L,GAGhE,QAASiO,GAAoB/C,GACzB,MAAOA,IAAY7K,QAAQuC,UAAUsI,EAASzG,MAAQyG,EAASzG,KAAOyG,EA9C1E,GAAIjJ,GAAOC,IAEXD,GAAK2L,OAASA,EACd3L,EAAKgM,oBAAsBA,EAC3BhM,EAAKiM,IAAM,SAAUlO,EAAKoK,GACtB,MAAOsD,GAAM1N,EAAK,MAAOoK,IAE7BnI,EAAKkM,KAAO,SAAUnO,EAAKyE,GACvB,MAAOiJ,GAAM1N,EAAK,OAAQoO,OAAW3J,IAEzCxC,EAAKoM,IAAM,SAAUrO,EAAKoK,EAAQ3F,GAC9B,MAAOiJ,GAAM1N,EAAK,MAAOoK,EAAQ3F,IAErCxC,EAAAA,UAAc,SAAUjC,EAAKoK,GACzB,MAAOsD,GAAM1N,EAAK,SAAUoK,IArBpCkD,EAAOlN,SAAW,KAAM,QAAS,WAAY,iBAC7CC,QAAQC,OAAO,oBACV6B,QAAQ,aAAcmL,MAuD/B,WACI,YAMA,SAASgB,GAAgBC,EAAYC,EAAW9E,GAC5C,UAWA,OAAO,UAAU+E,GAgDb,QAASC,GAAMjK,EAAMkK,GACjBA,EAAUA,KACV,IAGIpD,GAASoC,EAHT3N,EAAM2O,EAAQ3O,KAAOyO,EAAKzO,IAC1B+B,KAGAkD,EAAK2J,EAAMnK,EAaf,OAZAiF,GAAcxI,QACV+D,GACA0I,EAAS,OACT3N,EAAMA,EAAM,IAAMiF,EAClBsG,EAAUgD,EAAWF,IAAIrO,KAASyE,KAElCkJ,EAAS,SACTpC,EAAUgD,EAAWJ,KAAKnO,EAAKyE,IAGnC6F,EAAMiB,EAASoD,EAAShB,EAAQ5L,GAEzBA,EAGX,QAAS8M,GAAQpK,EAAMkK,GACnBA,EAAUA,KACV,IAAI3O,GAAM2O,EAAQ3O,KAAOyO,EAAKzO,IAC1B+B,IAKJ,OAHA2H,GAAcxI,QACdoJ,EAAMiE,EAAAA,UAAkBvO,GAAOiF,GAAI2J,EAAMnK,KAAUkK,EAAS,SAAU5M,GAE/DA,EAGX,QAAS+M,GAAOH,GACZA,EAAUA,KACV,IAAI3O,GAAM2O,EAAQ3O,KAAOyO,EAAKzO,IAC1B+O,IAcJ,OAZAC,GAAST,EAAWL,IAAIlO,GAAM2O,EAAS,QAAQ,GAAM5G,KAAK,SAAUtD,GAChE,GAAIA,IAASpE,QAAQ4M,QAAQxI,GACzB,KAAM,IAAIwK,OAAM,qCAEpB5O,SAAQyB,QAAQ2C,EAAM,SAAU1C,GAC5BgN,EAAK/G,KAAKjG,KAEd4M,EAAQnK,SAAWmK,EAAQnK,QAAQuK,KAPvCC,SAQS,SAAUlE,GACf6D,EAAQ7D,OAAS6D,EAAQ7D,MAAMA,KAG5BiE,EAGX,QAASG,GAAKjK,EAAI0J,GACdA,EAAUA,KACV,IAAI3O,GAAM2O,EAAQ3O,KAAOyO,EAAKzO,IAC1B+B,IAIJ,OAFAuI,GAAMiE,EAAWL,IAAIlO,GAAOiF,GAAIA,IAAO0J,EAAS,OAAQ5M,GAEjDA,EAGX,QAASiN,GAASzD,EAASoD,EAAShB,EAAQwB,GACxC,GAAIC,GAAY,WACZ,MAAO7D,GAEX,OAAIoD,GAAQjF,cACD8E,EAAU/D,MAAOf,cAAeiF,EAAQjF,cAAeqB,OAAQqE,IACnEZ,EAAUb,IACbjC,YAAaiD,EAAQjD,cAAgByD,KAAW,EAAOV,EAAKjC,SAAWiC,EAAKtJ,MAC5E4F,OAAQqE,IAIhB,QAAS9E,GAAMiB,EAASoD,EAAShB,EAAQ5L,GACrCiN,EAASzD,EAASoD,EAAShB,GAAQ5F,KAAK,SAAUtD,GAC9C,GAAIA,GAAQpE,QAAQ4M,QAAQxI,GACxB,KAAM,IAAIwK,OAAM,yCAEpB5O,SAAQgP,KAAK5K,EAAM1C,GACnB4M,EAAQnK,SAAWmK,EAAQnK,QAAQzC,KALvCiN,SAMS,SAAUlE,GACf6D,EAAQ7D,OAAS6D,EAAQ7D,MAAMA,KAjIvC,GADA2D,EAAOA,OACFA,EAAKzO,IACN,KAAM,IAAIiP,OAAM,mBAEpB,IAAIR,EAAKxJ,KAAO5E,QAAQiP,SAASb,EAAKxJ,IAClC,KAAM,IAAIgK,OAAM,uCACpB,IAAIR,EAAKG,QAAUvO,QAAQkP,WAAWd,EAAKG,OACvC,KAAM,IAAIK,OAAM,iDACpB,IAAIL,GAAQ,SAAUnK,GAClB,MAAIgK,GAAKxJ,GACER,EAAKgK,EAAKxJ,IACjBwJ,EAAKG,MACEH,EAAKG,MAAMnK,GACfA,EAAKQ,IAAMR,EAAK+K,IAGvBC,EAAW,SAAUhL,GACrBpE,QAAQqP,OAAOxN,KAAMuC,GAErBvC,KAAKyN,MAAQ,SAAUhB,GACnB,MAAOD,GAAMxM,KAAMyM,IAGvBzM,KAAK0N,QAAU,SAAUjB,GACrB,MAAOE,GAAQ3M,KAAMyM,IA8G7B,OA1GAc,GAASpK,MAAQyJ,EACjBW,EAASvB,IAAMgB,EACfO,EAASlL,KAAOmK,EAChBe,EAAAA,UAAkBZ,EAuGXY,GAvJfnB,EAAgBlO,SAAW,aAAc,YAAa,iBACtDC,QAAQC,OAAO,oBACV+M,QAAQ,WAAYiB,MA0J7B,WACI,YAMA,SAASuB,GAAQvD,GACb,UAEA,OAAOA,IACHtM,IAAK,eACLwM,SAAU,WACVrH,KAAM,YAVd0K,EAAQzP,SAAW,YACnBC,QAAQC,OAAO,oBACN6B,QAAQ,UAAW0N,MAYhC,WACI,YAMA,SAAShL,GAAQyH,GACb,UAEA,OAAOA,IACHtM,IAAK,eACLwM,SAAU,WACVrH,KAAM,YAVdN,EAAQzE,SAAW,YACnBC,QAAQC,OAAO,oBACN6B,QAAQ,UAAW0C","file":"client/dist/app.min.js","sourcesContent":["var app = {\r\n    config:{\r\n        appPath: '/client/app/',\r\n        directivesPath: '/client/app/directives/',\r\n        courses: '/client/app/courses/',\r\n    }\r\n};\n(function () {\r\n    'use strict';\r\n\r\n    config.$inject = [\"$stateProvider\"];\r\n    angular.module('courses.main', ['courses.common'])\r\n        .config(config);\r\n\r\n    function config($stateProvider) {\r\n        'ngInject';\r\n\r\n        $stateProvider.state('Default', {\r\n            url: '',\r\n            views: {\r\n                \"mainView\": {                    \r\n                    template: '<courses-list></courses-list>',                    \r\n                }\r\n            }\r\n        });\r\n    }\r\n})();\n(function () {\r\n\t'use strict';\r\n\tangular.module('courses.common', [\r\n\t\t\t/* Angular modules */\r\n\t\t\t'ngMessages',\r\n\r\n\t\t\t/* Cross-app modules */\r\n\t\t\t'courses.settings',\r\n\t\t\t'courses.notifications',\r\n\t\t\t'courses.services',\r\n\r\n\t\t\t/* App directives */\r\n\t\t\t'courese.directives',\r\n\r\n\t\t\t/* 3rd Party modules */\r\n\t\t\t'ui.bootstrap',\r\n\t\t\t'ui.router',\r\n\t\t\t'ui.select',\r\n\t\t\t'ui.grid',\r\n\t\t\t'ui.grid.selection',\r\n\t\t\t'ui.grid.pagination',\r\n\t\t\t'ui.grid.autoResize',\r\n\t\t\t'toaster']\r\n\t\t)\r\n\t\t// if config grow bigger it will be moved to separate file\r\n\t\t.config(['toasterConfig', function (toasterConfig) {\r\n\t\t\ttoasterConfig['close-button'] = true;\r\n\t\t\ttoasterConfig['position-class'] = 'toast-top-right';\r\n\t\t\ttoasterConfig['newest-on-top'] = false;\r\n\t\t\ttoasterConfig.limit = 50;\r\n\t\t}]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('courses.notifications', ['toaster']);\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('courses.services', ['courses.notifications', 'courses.settings']);\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    var Notifications = (function () {\r\n        function Notifications(toaster) {\r\n            var self = this;\r\n\r\n            self.showError = showError;\r\n            self.showSuccess = showSuccess;\r\n            self.showInfo = showInfo;\r\n            self.showSpinner = showSpinner;\r\n            self.clear = clear;\r\n            self.remove = remove;\r\n            self.showErrors = showErrors;\r\n\r\n            /// Implementation ///\r\n            function showError(title, message) {\r\n                return notifyMessage(title, message, 0, 'error');\r\n            }\r\n\r\n            function showSuccess(title, message) {\r\n                return notifyMessage(title, message, 2000, 'success');\r\n            }\r\n\r\n            function showInfo(title, message) {\r\n                return notifyMessage(title, message, 5000, 'info');\r\n            }\r\n\r\n            function showSpinner(title, message) {\r\n                return notifyMessage(title, message, 0, 'wait');\r\n            }\r\n\r\n            function clear() {\r\n                toaster.clear();\r\n            }\r\n\r\n            function remove(notificationId, containerId) {\r\n                toaster.clear(containerId, notificationId);\r\n            }\r\n\r\n            function notifyMessage(title, message, timeout, type) {\r\n                return toaster.pop({\r\n                    type: type,\r\n                    title: title,\r\n                    body: message,\r\n                    timeout: timeout,\r\n                    notifyCloseButton: true,\r\n                }).toastId;\r\n            }\r\n\r\n            function showErrors(errorMessages, title) {\r\n                angular.forEach(errorMessages, function (value, key) {\r\n                    self.showError(title || key, value);\r\n                });\r\n            }\r\n        }\r\n\r\n        Notifications.$inject = ['toaster'];\r\n        return Notifications;\r\n    })();\r\n\r\n    angular.module('courses.notifications')\r\n            .service('notifications', Notifications);\r\n})();\n(function (app) {\r\n    \"use strict\";\r\n\r\n    angular\r\n        .module('courese.directives.forms', ['ngAnimate', 'ui.bootstrap'])\r\n        .directive('swrtDatePicker', datePicker);\r\n\r\n    function datePicker() {\r\n        var directive = {\r\n            require: 'ngModel',\r\n            restrict: 'E',\r\n            scope: {\r\n                ngModel: '=',\r\n                ngRequired: '=',\r\n                ngChange: '&',\r\n                field: '@',\r\n                format: '@',\r\n                closeText: '@',\r\n                clearText: '@',\r\n                currentText: '@',\r\n                altInputFormats: '=',\r\n                datepickerOptions: '=',\r\n                manualEntry: '@',\r\n            },\r\n            replace: true,\r\n            templateUrl: app.config.directivesPath + 'views/date.picker.html',\r\n            controller: DatePickerController,\r\n            controllerAs: 'vm',\r\n        };\r\n\r\n        DatePickerController.$inject = ['$scope', '$timeout'];\r\n        function DatePickerController($scope, $timeout) {\r\n            var vm = this;\r\n            vm.isOpened = false;\r\n            vm.open = function () {\r\n                vm.isOpened = true;\r\n            };\r\n            vm.closeText = angular.isDefined($scope.closeText) ? $scope.closeText : 'Close';\r\n            vm.format = angular.isDefined($scope.format) ? $scope.format : 'dd-MMMM-yyyy';\r\n            vm.manualEntry = angular.isDefined($scope.manualEntry) ? $scope.manualEntry : false;\r\n            vm.onDateChange = function () {\r\n                if ($scope.ngChange)\r\n                    $timeout($scope.ngChange);\r\n            };\r\n            vm.isReadOnly = function () {\r\n                return isReadOnly(vm.manualEntry);\r\n            };\r\n        }\r\n\r\n        function isReadOnly(manualEntry) {\r\n            return manualEntry === 'false' || manualEntry === false || manualEntry === '';\r\n        }\r\n        return directive;\r\n    }\r\n})(app);\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('courese.directives.common', []);\r\n    angular.module('courese.directives.forms', ['courese.directives.common']);\r\n    angular.module('courese.directives.layout', ['courese.directives.common']);\r\n\r\n    angular.module('courese.directives', ['courese.directives.forms', 'courese.directives.layout']);\r\n\r\n})();\n(function (app) {\r\n    'use strict';\r\n\r\n    angular.module('courese.directives.layout')\r\n        .component('courses.footer', {\r\n            templateUrl: app.config.directivesPath + 'views/footer.html',\r\n            controller: function () {\r\n                var vm = this;\r\n\r\n                vm.author = 'Mohammad Helmy (@moahelmy)';\r\n            },\r\n            controllerAs: 'vm'\r\n        });\r\n})(app);\n(function (app) {\r\n    'use strict';\r\n\r\n    angular.module('courese.directives.layout')\r\n        .component('courses.header', {\r\n            templateUrl: app.config.directivesPath + 'views/header.html',\r\n            controller: function () {\r\n                var vm = this;\r\n\r\n                vm.title = 'Courses - Sample App with AngularJS, EF and ASP.NET MVC';\r\n            },\r\n            controllerAs: 'vm'\r\n        });\r\n})(app);\n(function () {\r\n    'use strict';\r\n\r\n    EditCoursesController.$inject = [\"Course\", \"$uibModalInstance\", \"course\"];\r\n    angular.module('courses.main')\r\n        .controller('CourseEditDialogController', EditCoursesController);\r\n\r\n\r\n    function EditCoursesController(Course, $uibModalInstance, course) {\r\n        'ngInject';\r\n\r\n        var vm = this;\r\n\r\n        vm.course = course || {};\r\n        vm.save = save;\r\n        vm.cancel = cancel;\r\n\r\n        /// ============== ///\r\n\r\n        function save() {\r\n            Course.save(vm.course, {\r\n                success: function (data) {\r\n                    $uibModalInstance.close(data);\r\n                }\r\n            });\r\n        }\r\n\r\n        function cancel() {\r\n            $uibModalInstance.dismiss('cancel');\r\n        }\r\n    }\r\n})();\n(function (app) {\r\n    'use strict';\r\n\r\n    EditCoursesController.$inject = [\"Teacher\"];\r\n    angular.module('courses.main')\r\n        .component('courseEdit', {\r\n            templateUrl: app.config.courses + 'course.edit.html',\r\n            controller: EditCoursesController,\r\n            bindings: {\r\n                course: '=',\r\n            }\r\n        });\r\n\r\n\r\n    function EditCoursesController(Teacher) {\r\n        'ngInject';\r\n\r\n        var vm = this;\r\n\r\n        vm.teachers = Teacher.query();\r\n        vm.teacher = vm.course && { id: vm.course.teacherId, name: vm.course.teacherName } || {};\r\n        vm.teacherSelected = teacherSelected;\r\n\r\n        vm.course = vm.course || {};\r\n\r\n        /// ============== ///\r\n\r\n        function teacherSelected(selectedTeacher) {\r\n            vm.course.teacherId = selectedTeacher.id;\r\n            vm.course.teacherName = selectedTeacher.name;\r\n        }\r\n    }\r\n})(app);\n(function (app) {\r\n    'use strict';\r\n\r\n    CourseStudentsController.$inject = [\"uiGridConstants\"];\r\n    angular.module('courses.main')\r\n        .component('courseStudents', {\r\n            templateUrl: app.config.courses + 'course.students.html',\r\n            controller: CourseStudentsController,\r\n            bindings: {\r\n                courseId: '='\r\n            }\r\n        });\r\n\r\n    function CourseStudentsController(uiGridConstants) {\r\n        'ngInject';\r\n\r\n        var vm = this;\r\n\r\n        vm.students = [];\r\n        vm.studentsGrid = [];\r\n\r\n        vm.add = addStudent;\r\n        vm.edit = editStudent;\r\n        vm.remove = removeStudent;\r\n\r\n        _init();\r\n        /// ============== ///\r\n\r\n        function _init() {            \r\n            _initStudentsGrid();            \r\n        }\r\n\r\n        function addStudent(entity) {\r\n\r\n        }\r\n\r\n        function editStudent(entity) {\r\n\r\n        }\r\n\r\n        function removeStudent(entity) {\r\n\r\n        }\r\n\r\n        function _initStudentsGrid() {\r\n            vm.studentsGrid = {\r\n                paginationPageSizes: [5],\r\n                paginationPageSize: 5,\r\n                rowHeight: 33,\r\n                enableRowSelection: false,\r\n                enableRowHeaderSelection: false,\r\n                enableSelectAll: false,\r\n                multiSelect: false,\r\n                enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,\r\n                enableVerticalScrollbar: uiGridConstants.scrollbars.NEVER,\r\n                enableColumnMenus: false,\r\n                enableSorting: true,\r\n                columnDefs: [\r\n                    { field: 'edit', displayName: '', cellTemplate: 'edit-student-template', width: 40, enableSorting: false },\r\n                    { field: 'delete', displayName: '', cellTemplate: 'delete-student-template', width: 40, enableSorting: false },\r\n                    { name: 'Name', field: 'name', displayName: 'Name', width: '65%' },\r\n                    { name: 'Age', field: 'age', displayName: 'Age', cellClass: 'text-center', width: '15%%' },\r\n                    { name: 'GPA', field: 'gpa', displayName: 'GPA', cellClass: 'text-center', width: '15%' },\r\n                ],\r\n                data: '$ctrl.students',\r\n            };\r\n            vm.studentsGrid.appScopeProvider = vm;\r\n        }\r\n    }\r\n\r\n})(app);\n(function (app) {\r\n    'use strict';\r\n\r\n    CoursesListController.$inject = [\"uiGridConstants\", \"Course\", \"$uibModal\", \"$templateCache\"];\r\n    angular.module('courses.main')\r\n        .component('coursesList', {\r\n            templateUrl: app.config.courses + 'courses.html',\r\n            controller: CoursesListController\r\n        });\r\n\r\n\r\n    function CoursesListController(uiGridConstants, Course, $uibModal, $templateCache) {\r\n        'ngInject';\r\n\r\n        var vm = this;\r\n\r\n        vm.courses = Course.query();\r\n        vm.course = {};\r\n        vm.coursesGrid = {};\r\n\r\n        vm.add = addCourse;\r\n        vm.edit = editCourse;\r\n        vm.remove = removeCourse;\r\n\r\n        _init();\r\n        /// ============== ///\r\n\r\n        function _init() {\r\n            _initCoursesGrid();\r\n        }\r\n\r\n        function addCourse() {\r\n            _openDialog()\r\n                .result.then(function (course) {\r\n                    course && vm.courses.push(course);\r\n                });\r\n        }\r\n\r\n        function editCourse(entity) {\r\n            _openDialog(entity)\r\n                .result.then(function (course) {\r\n                    course && _updateCourse(entity, course);\r\n                });\r\n        }\r\n\r\n        function removeCourse(entity) {\r\n            _openDialog(entity, 'course.delete.dialog.html', 'CourseDeleteDialogController')\r\n                .result.then(function (course) {\r\n                course && _removeCourse(entity);\r\n            });\r\n        }\r\n\r\n        function _updateCourse(entity, course) {\r\n            var index = vm.courses.indexOf(entity);\r\n            index > -1 && (vm.courses[index] = course);\r\n        }\r\n\r\n        function _removeCourse(entity) {\r\n            var index = vm.courses.indexOf(entity);\r\n            index > -1 && vm.courses.splice(index, 1);\r\n        }\r\n\r\n        function _openDialog(course, viewName, ctrl) {\r\n            var tUrl = app.config.courses + (viewName || 'course.edit.dialog.html');\r\n            $templateCache.remove(tUrl);\r\n            return $uibModal.open({\r\n                animation: true,\r\n                templateUrl: tUrl,\r\n                controller: ctrl || 'CourseEditDialogController',\r\n                controllerAs: 'vm',\r\n                keyboard: true,\r\n                backdrop: 'static',\r\n                size: 'lg',\r\n                resolve: {\r\n                    course: function () {\r\n                        return course || null;\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        function _initCoursesGrid() {\r\n            vm.coursesGrid = {\r\n                paginationPageSizes: [5],\r\n                paginationPageSize: 5,\r\n                rowHeight: 33,\r\n                enableRowSelection: true,\r\n                enableRowHeaderSelection: false,\r\n                enableSelectAll: false,\r\n                multiSelect: false,\r\n                enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,\r\n                enableVerticalScrollbar: uiGridConstants.scrollbars.NEVER,\r\n                enableColumnMenus: false,\r\n                enableSorting: true,\r\n                columnDefs: [\r\n                    { field: 'edit', displayName: '', cellTemplate: 'edit-course-template', width: 40, enableSorting: false },\r\n                    { field: 'delete', displayName: '', cellTemplate: 'delete-course-template', width: 40, enableSorting: false },\r\n                    { name: 'Name', field: 'name', displayName: 'Name', width: '30%' },\r\n                    { name: 'Location', field: 'location', displayName: 'Location', width: '40%' },\r\n                    { name: 'Teacher', field: 'teacherName', displayName: 'Teacher', width: '25%' },\r\n                ],\r\n                data: '$ctrl.courses',\r\n            };\r\n            vm.coursesGrid.appScopeProvider = vm;\r\n            vm.coursesGrid.onRegisterApi = function (gridApi) {\r\n                gridApi.selection.on.rowSelectionChanged(null, function (row) {\r\n                    vm.course = row.entity;\r\n                    vm.students = vm.course.students;\r\n                });\r\n            };\r\n        }\r\n    }\r\n})(app);\n(function () {\r\n    'use strict';\r\n\r\n    ApiHelper.$inject = [\"$q\", \"$log\", \"notifications\"];\r\n    angular.module('courses.services')\r\n            .service('apiHelper', ApiHelper);\r\n\r\n    function ApiHelper($q, $log, notifications) {\r\n        'ngInject';\r\n\r\n        var self = this, loadAction = \"load\", createAction = \"create\", saveAction = \"save\", deleteAction = \"delete\", _notificationSettings;\r\n\r\n        self.call = call;\r\n        self.load = load;\r\n        self.create = create;\r\n        self.save = save;\r\n        self.delete = deleteRecord;\r\n\r\n        _init();\r\n\r\n        /// =================== ///\r\n        function _init() {\r\n            _notificationSettings = {};\r\n            _notificationSettings[loadAction] = {\r\n                title: 'Loading',\r\n                spinningPrefix: 'Loading ',\r\n                successSuffix: ' loaded!',\r\n                errorPrefix: 'An unexpected error while loading ',\r\n            };\r\n            _notificationSettings[createAction] = {\r\n                title: 'Saving',\r\n                spinningPrefix: 'Saving ',\r\n                successSuffix: ' has been created!',\r\n                errorPrefix: 'An unexpected error while creating ',\r\n            };\r\n            _notificationSettings[saveAction] = {\r\n                title: 'Saving',\r\n                spinningPrefix: 'Saving changes to ',\r\n                successSuffix: ' saved!',\r\n                errorPrefix: 'An unexpected error while saving ',\r\n            };\r\n            _notificationSettings[deleteAction] = {\r\n                title: 'Deleting',\r\n                spinningPrefix: 'Deleting ',\r\n                successSuffix: ' deleted!',\r\n                errorPrefix: 'An unexpected error while deleting ',\r\n            };\r\n        }\r\n\r\n        function load(params) {\r\n            params.actionName = loadAction;\r\n            return _call(params);\r\n        }\r\n\r\n        function create(params) {\r\n            params.actionName = createAction;\r\n            return _call(params);\r\n        }\r\n\r\n        function save(params) {\r\n            params.actionName = saveAction;\r\n            return _call(params);\r\n        }\r\n\r\n        function deleteRecord(params) {\r\n            params.actionName = deleteAction;\r\n            return _call(params);\r\n        }\r\n\r\n        function call(params) {\r\n            var spinningNotification = params.notifications && params.notifications.spinning,\r\n                successNotification = params.notifications && params.notifications.success,\r\n                errorNotification = params.notifications && params.notifications.error,\r\n                action = params.action;\r\n            // spinning/success/error notifications are shown only if spinning/success/error is defined.\r\n            var deferred = $q.defer();\r\n            var notificationId = null;\r\n            try {\r\n                notificationId = spinningNotification && notifications.showSpinner(spinningNotification.title, spinningNotification.message);\r\n                action().then(function (response) {\r\n                    if (notificationId) notifications.remove(notificationId);\r\n                    if (successNotification) notifications.showSuccess(successNotification.title, successNotification.message);\r\n                    deferred.resolve(_getData(response));\r\n                })\r\n                .catch(function (response) {\r\n                    if (notificationId) notifications.remove(notificationId);\r\n                    if (response.data && response.data.message) {\r\n                        notifications.showError('Error', response.data.message);\r\n                    } else {\r\n                        if (errorNotification) notifications.showError(errorNotification.title, errorNotification.message);\r\n                    }\r\n                    deferred.reject(response);                    \r\n                });\r\n            }\r\n            catch (ex) {\r\n                $log.error(ex);\r\n                if (notificationId) notifications.remove(notificationId);\r\n                if (errorNotification) notifications.showError(errorNotification.title, 'An unexpected error occured. Check log.');\r\n                deferred.reject({ Exception: ex });\r\n            }\r\n            return deferred.promise;\r\n        }\r\n\r\n        function _call(params) {\r\n            var args = {\r\n                notifications: _getNotifications({\r\n                    description: params.description,\r\n                    action: params.actionName,\r\n                }),\r\n                action: params.action,\r\n            };\r\n            return call(args);\r\n        }\r\n\r\n        function _getNotifications(params) {\r\n            if (!params.description || params.description.length === 0)\r\n                return;\r\n            var description = params.description,\r\n                upperFirstLetterDescription = description[0].toUpperCase() + description.substring(1),\r\n                lowerFirstLetterDescription = description[0].toLowerCase() + description.substring(1),\r\n                title, spinningPrefix, successSuffix, errorPrefix;\r\n            var actionNotificationSetting = _notificationSettings[params.action];\r\n            if (!actionNotificationSetting)\r\n                return;\r\n\r\n            title = actionNotificationSetting.title;\r\n            spinningPrefix = actionNotificationSetting.spinningPrefix;\r\n            successSuffix = actionNotificationSetting.successSuffix;\r\n            errorPrefix = actionNotificationSetting.errorPrefix;\r\n            return {\r\n                spinning: (params.showSpinnerNotifications || true) && { title: title, message: spinningPrefix + lowerFirstLetterDescription },\r\n                success: (params.showSuccessNoifications || true) && { title: upperFirstLetterDescription, message: upperFirstLetterDescription + successSuffix },\r\n                error: (params.showErrorNoifications || true) && { title: 'Error!', message: errorPrefix + lowerFirstLetterDescription + '.' },\r\n            };\r\n        }\r\n\r\n        function _getData(response) {\r\n            return response && angular.isDefined(response.data) ? response.data : response;\r\n        }\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    Courses.$inject = [\"resource\"];\r\n    angular.module('courses.services')\r\n            .service('Course', Courses);\r\n\r\n    function Courses(resource) {\r\n        'ngInject';\r\n\r\n        var courseResource = resource({\r\n            url: 'api/courses',\r\n            listName: 'Course',\r\n            name: 'course'\r\n        });\r\n\r\n        courseResource.students = function (courseId) {\r\n            return courseResource.query({\r\n                url: 'api/courses/' + courseId + '/students',\r\n            });\r\n        };\r\n\r\n        return courseResource;\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('courses.services')\r\n        .factory('transformData', transformFactory);\r\n\r\n    function transformFactory() {\r\n        function transformObject(data) {\r\n            var obj = {};\r\n\r\n            for (var prop in data) {\r\n                if (data.hasOwnProperty(prop)) {\r\n                    var newPropName = prop.charAt(0).toLowerCase() + prop.substring(1);\r\n                    newPropName = newPropName.replace(' ', '').replace('-', '');\r\n                    obj[newPropName] = data[prop];\r\n                }\r\n            }\r\n\r\n            return obj;\r\n        }\r\n\r\n        function transform(data) {\r\n            if (angular.isArray(data)) {\r\n                var arr = [];\r\n                for (var i = 0; i < data.length; i++) {\r\n                    arr.push(transform(data[i]));\r\n                }\r\n                return arr;\r\n            }\r\n\r\n            if (angular.isObject(data)) {\r\n                return transformObject(data);\r\n            }\r\n        }\r\n\r\n        return function (data) {\r\n            return angular.isDefined(data) ? transform(data) : data;\r\n        };\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    Helper.$inject = [\"$q\", \"$http\", \"settings\", \"transformData\"];\r\n    angular.module('courses.services')\r\n        .service('httpClient', Helper);\r\n\r\n    function Helper($q, $http, settings, transformData) {\r\n        'ngInject';\r\n\r\n        var self = this;\r\n\r\n        self.getUrl = getUrl;\r\n        self.getDataFromResponse = getDataFromResponse;\r\n        self.get = function (url, params) {\r\n            return _http(url, 'GET', params);\r\n        };\r\n        self.post = function (url, data) {\r\n            return _http(url, 'POST', undefined, data);\r\n        };\r\n        self.put = function (url, params, data) {\r\n            return _http(url, 'PUT', params, data);\r\n        };\r\n        self.delete = function (url, params) {\r\n            return _http(url, 'DELETE', params);\r\n        };\r\n\r\n        /// =================== ///\r\n\r\n        // this is useful when we need to add constant headers to all requests\r\n        // also, it's good because I can tailor the success and fail behavior        \r\n        function _http(url, method, params, data) {\r\n            var deferred = $q.defer();            \r\n            $http({\r\n                method: method,\r\n                url: getUrl(url),\r\n                data: data,                \r\n                headers: { contentType: \"application/json; charset=utf-8\" },\r\n                params: params,\r\n            }).then(function (response) {\r\n                var data = response && response.data;                \r\n                return deferred.resolve(data ? transformData(data) : response);\r\n            }).catch(function (response) {\r\n                deferred.reject(response);\r\n            });\r\n\r\n            return deferred.promise;\r\n        }\r\n\r\n        function getUrl(url) {\r\n            var wsUrl = settings.webserviceUrl;\r\n            wsUrl = wsUrl + (wsUrl.charAt(wsUrl.length - 1) === '/' ? '' : '/');\r\n            return wsUrl + (url.charAt(0) ===  '/' ? url.substring(1) : url);\r\n        }\r\n\r\n        function getDataFromResponse(response) {\r\n            return response && angular.isDefined(response.data) ? response.data : response;\r\n        }\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    resourceFactory.$inject = [\"httpClient\", \"apiHelper\", \"notifications\"];\r\n    angular.module('courses.services')\r\n        .factory('resource', resourceFactory);\r\n\r\n    function resourceFactory(httpClient, apiHelper, notifications) {\r\n        'ngInject';\r\n\r\n        /*  opts\r\n        *  {\r\n        *      url: url, can override in save/delete options\r\n        *      listName: name used in notifications, can override in save/delete options\r\n        *      name: name used in notifications, can override in save/delete options\r\n        *      id: name of id property, id can be provided explicitily in save/delete options\r\n        *      getId: function to get id from data, id can be provided explicitily in save/delete options\r\n        *  }\r\n        */\r\n        return function (opts) {\r\n            opts = opts || {};\r\n            if (!opts.url) {\r\n                throw new Error('Url is required.');\r\n            }\r\n            if (opts.id && !angular.isString(opts.id))\r\n                throw new Error(\"id should be the name of id property\");\r\n            if (opts.getId && !angular.isFunction(opts.getId))\r\n                throw new Error(\"getId should be a function to get id from data\");\r\n            var getId = function (data) {\r\n                if (opts.id)\r\n                    return data[opts.id];\r\n                if (opts.getId)\r\n                    return opts.getId(data);\r\n                return data.id || data.Id;\r\n            };\r\n\r\n            var Resource = function (data) {\r\n                angular.extend(this, data);\r\n\r\n                this.$save = function (options) {\r\n                    return _save(this, options);\r\n                };\r\n\r\n                this.$delete = function (options) {\r\n                    return _delete(this, options);\r\n                };\r\n            };\r\n\r\n            Resource.query = _query;\r\n            Resource.get = _get;\r\n            Resource.save = _save;\r\n            Resource.delete = _delete;\r\n\r\n            /// ========== ///\r\n\r\n            /*\r\n             * All options in these methods are the same:\r\n             * {\r\n             *      id: use this id in delete or save\r\n             *      url: use this url instead of default\r\n             *      description: used to construct notifications\r\n             *      notifications: used to override notifications\r\n             *      success: what to do on success\r\n             *      error: what to do on error\r\n             * }\r\n             */\r\n\r\n            function _save(data, options) {\r\n                options = options || {};\r\n                var url = options.url || opts.url;\r\n                var value = {};\r\n\r\n                var promise, method;\r\n                var id = getId(data);\r\n                notifications.clear();\r\n                if (id) {\r\n                    method = 'save';\r\n                    url = url + '/' + id;\r\n                    promise = httpClient.put(url, {}, data);\r\n                } else {\r\n                    method = 'create';\r\n                    promise = httpClient.post(url, data);\r\n                }\r\n\r\n                _call(promise, options, method, value);\r\n\r\n                return value;\r\n            }\r\n\r\n            function _delete(data, options) {\r\n                options = options || {};\r\n                var url = options.url || opts.url;\r\n                var value = {};\r\n\r\n                notifications.clear();\r\n                _call(httpClient.delete(url, { id: getId(data) }), options, 'delete', value);\r\n\r\n                return value;\r\n            }\r\n\r\n            function _query(options) {\r\n                options = options || {};\r\n                var url = options.url || opts.url;\r\n                var list = [];\r\n\r\n                _apiCall(httpClient.get(url), options, 'load', true).then(function (data) {\r\n                    if (data && !angular.isArray(data)) {\r\n                        throw new Error('Expected an array from the backend');\r\n                    }\r\n                    angular.forEach(data, function (value) {\r\n                        list.push(value);\r\n                    });\r\n                    options.success && options.success(list);\r\n                }).catch(function (error) {\r\n                    options.error && options.error(error);\r\n                });\r\n\r\n                return list;\r\n            }\r\n\r\n            function _get(id, options) {\r\n                options = options || {};\r\n                var url = options.url || opts.url;\r\n                var value = {};\r\n\r\n                _call(httpClient.get(url, { id: id }), options, 'load', value);\r\n\r\n                return value;\r\n            }\r\n\r\n            function _apiCall(promise, options, method, isList) {\r\n                var promiseFn = function(){\r\n                    return promise;\r\n                };\r\n                if (options.notifications)\r\n                    return apiHelper.call({ notifications: options.notifications, action: promiseFn });\r\n                return apiHelper[method]({\r\n                    description: options.description || (isList === true ? opts.listName : opts.name),\r\n                    action: promiseFn\r\n                });\r\n            }\r\n\r\n            function _call(promise, options, method, value) {\r\n                _apiCall(promise, options, method).then(function (data) {\r\n                    if (data && angular.isArray(data)) {\r\n                        throw new Error('Expected single value from the backend');\r\n                    }\r\n                    angular.copy(data, value);\r\n                    options.success && options.success(value);\r\n                }).catch(function (error) {\r\n                    options.error && options.error(error);\r\n                });\r\n            }\r\n\r\n            return Resource;\r\n\r\n        };\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    Student.$inject = [\"resource\"];\r\n    angular.module('courses.services')\r\n            .service('Student', Student);\r\n\r\n    function Student(resource) {\r\n        'ngInject';\r\n\r\n        return resource({\r\n            url: 'api/students',\r\n            listName: 'Students',\r\n            name: 'Student'\r\n        });\r\n    }\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    Teacher.$inject = [\"resource\"];\r\n    angular.module('courses.services')\r\n            .service('Teacher', Teacher);\r\n\r\n    function Teacher(resource) {\r\n        'ngInject';\r\n\r\n        return resource({\r\n            url: 'api/teachers',\r\n            listName: 'Teachers',\r\n            name: 'Teacher'\r\n        });\r\n    }\r\n})();"],"sourceRoot":"/source/"}